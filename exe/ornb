#!/usr/bin/env ruby
require 'colorize'
require 'thor'
require 'fileutils'
require "ornb"

module Ornb
  class CLI < Thor
    def initialize(*argv)
      super(*argv)
    end

    desc 'readme', 'make initial README.org'
    def readme(*argv)
      lib = File.expand_path("../../lib", __FILE__)
      p s_file = File.join(lib, 'readme', 'README.org')
      p Dir.entries('.')
      if File.exists?('./README.org')
        puts "README.org exists. "
      else
        FileUtils.cp(s_file, '.')
      end
    end

    desc 'plot', 'cp gnuplot.rake'
    def plot(*argv)
      lib = File.expand_path("../../lib", __FILE__)
      target = 'gnuplot.rake'
      p s_file = File.join(lib, File.basename(target,'.rake'), target)
      p Dir.entries('.')
      if File.exists?(target)
        puts target + " exists. "
      else
        FileUtils.cp(s_file, '.')
      end
    end

    desc 'link_check', 'link check'
    def link_check(*argv)
      file = argv[0] || 'README.org'
      puts "target_file: "+file
      File.readlines(file).each_with_index do |line, i|
        line.scan(/\[\[(.+?)\]\]/) do |match|
          link = (m = match[0].match(/(.+)\]\[/) )? m[1] : match[0].to_s
          unless File.exists?(link)
            next if link.match(/^\#/)
            printf("%4d:%s:",i,link)
            printf("%s\n",line.chomp)
            search_file(link)
          end
        end
      end
    end

    private
    def search_file(link)
      p file = File.basename(link)
      system "find . -name #{file}"
    end


  end
end

Ornb::CLI.start(ARGV)
