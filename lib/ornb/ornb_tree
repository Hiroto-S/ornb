#!/usr/bin/env ruby

def mk_tree(dir, level)
  $tree <<  "*"*level + " [["+dir+"]]"
  level += 1
  dirs = []
  Dir.glob(File.join(dir,'*')).each do |file|
    b_file = File.basename(file)
    unless File.directory?(file)
      $tree <<  "-"*level + " [["+File.join(dir,b_file)+"]["+File.basename(b_file)+"]]"
    else
      dirs << file # dirs should be late.
    end
  end
  dirs.each do |file|
    b_file = File.basename(file)
    mk_tree(File.join(dir,b_file), level)
  end
end

def head_check(line, max_level)
  m = line.match(/^([-|*]+)(.+)\]\]/)
  line_level = m[1].size
  if line_level < max_level
    return m[1][0] == '*' ? m[1]+m[2]+"/]]\n" : "-"+m[2]+"]]\n"
  elsif line_level == max_level
    return m[1][0] == '*' ? "-"+m[2]+"/]]\n" :  "-"+m[2]+"]]\n"
  else
    return nil
  end
end

max_level = ARGV[0] || 2

$tree = []
mk_tree('.',1)

$tree.each do |line|
  print head_check(line, max_level.to_i)
end
